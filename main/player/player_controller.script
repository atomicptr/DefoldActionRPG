local xvmath = require("modules.xvmath")

local ACCELERATION = 500
local MAX_SPEED = 80
local FRICTION = 500

---@class PlayerController
---@field velocity vector3
---@field input_vector vector3|vector4

---@param self PlayerController
function init(self)
    msg.post(".", "acquire_input_focus")
    self.velocity = vmath.vector3()
    self.input_vector = vmath.vector3()
end

---@param self PlayerController
---@param action_id userdata
---@param action table
function on_input(self, action_id, action)
    if action.pressed and action_id == hash("move_up") then
        self.input_vector.y = 1
    elseif action.pressed and action_id == hash("move_down") then
        self.input_vector.y = -1
    end

    if action.pressed and action_id == hash("move_left") then
        self.input_vector.x = -1
    elseif action.pressed and action_id == hash("move_right") then
        self.input_vector.x = 1
    end

    if action.released and (action_id == hash("move_up") or action_id == hash("move_down")) then
        self.input_vector.y = 0
    elseif action.released and (action_id == hash("move_left") or action_id == hash("move_right")) then
        self.input_vector.x = 0
    end

    if self.input_vector ~= vmath.vector3() then
        self.input_vector = vmath.normalize(self.input_vector)
    end
end

---@param self PlayerController
---@param dt float
function update(self, dt)
    if self.input_vector == vmath.vector3() then
        self.velocity = xvmath.move_toward(self.velocity, vmath.vector3(), FRICTION * dt)
    else
        self.velocity = xvmath.move_toward(self.velocity, self.input_vector * MAX_SPEED, ACCELERATION * dt)
    end

    move(self.velocity * dt)
end

---@param movement vector3
function move(movement)
    local position = go.get_position()
    position = position + movement
    go.set_position(position)
end
